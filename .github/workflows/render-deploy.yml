name: Render Deploy + GitHub Deployment (simple, debug)

on:
  push:
    branches: [ "main" ]   # change if your default branch isn't main
  workflow_dispatch:        # allows manual run

permissions:
  contents: read
  deployments: write
  statuses: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Show inputs/secrets presence (debug)
        run: |
          echo "Branch: $GITHUB_REF"
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "ERROR: RENDER_DEPLOY_HOOK secret is NOT set."; exit 1
          else
            echo "OK: RENDER_DEPLOY_HOOK is set."
          fi
          if [ -z "${{ secrets.APP_URL }}" ]; then
            echo "Note: APP_URL not set (that's OK; no health link will be added)."
          else
            echo "OK: APP_URL is set."
          fi

      - name: Create GitHub Deployment (pending)
        id: gh_deploy
        uses: bobheadxi/deployments@v1
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production
          ref: ${{ github.sha }}

      - name: Trigger Render Deploy via Deploy Hook
        id: trigger
        run: |
          set -e
          echo "Calling Render Deploy Hook..."
          # Show HTTP status & body for debugging (but not the secret)
          http_code=$(curl -s -o resp.txt -w "%{http_code}" -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}")
          echo "Render responded with HTTP $http_code"
          echo "--- Response body ---"
          cat resp.txt || true
          echo "---------------------"
          if [ "$http_code" -lt 200 ] || [ "$http_code" -ge 300 ]; then
            echo "ERROR: Render hook returned non-2xx."
            exit 1
          fi

      - name: Mark Deployment successful
        if: success()
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production
          status: success
          deployment_id: ${{ steps.gh_deploy.outputs.deployment_id }}
          env_url: ${{ secrets.APP_URL }}

      - name: Mark Deployment failed
        if: failure()
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production
          status: failure
          deployment_id: ${{ steps.gh_deploy.outputs.deployment_id }}
